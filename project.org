#+TITLE: Newton
#+AUTHOR: Ashton Wiersdorf

* Domain Model

*** Questions

| Field          | Type     |
|----------------+----------|
| id             | uuid     |
| class_id       | uuid     |
| text           | string   |
| tags           | [string] |
| type           | enum     |
| last_edit_hash | string   |
| archived       | bool     |

Questions are scoped to a particular class. The class provides the notion of a workspace, to which multiple users can belong.

Question =type= is one of:
 - multiple-choice
 - free-response
 - fill-blank

The =archived= field allows us to soft-delete questions.

See [[https://stackoverflow.com/questions/39643454/postgres-check-if-array-field-contains-value#][here]] for how to query based on an array value.

*** History

| Field       | Type   |
|-------------+--------|
| question_id | uuid   |
| text        | string |
| hash        | string |

We'll build this later as a way to record the changes to a question.

*** Answers

| Field           | Type   |
|-----------------+--------|
| question_id     | uuid   |
| text            | string |
| display         | bool   |
| points_marked   | int    |
| points_unmarked | int    |

Setting =display= to ~false~ would let you record an answer for a fill-in-the-blank (or a free-response question) but not have it render in the final document.

*** Comment

| Field       | Type   |
|-------------+--------|
| question_id | uuid   |
| text        | string |
| user_id     | uuid   |
| resolved    | bool   |

This provides a way for collaborators to discuss changes.

*** Tags

| Field    | Type   |
|----------+--------|
| class_id | uuid   |
| name     | string |
| color    | string |

*** Tests

| Field      | Type   |
|------------+--------|
| class_id   | uuid   |
| name       | string |
| open_date  | date   |
| close_date | date   |


*** TestQuestions

| Field       | Type |
|-------------+------|
| test_id     | uuid |
| question_id | uuid |
| order       | int  |


*** Statistics

| Field         | Type |
|---------------+------|
| question_id   | uuid |
| test_id       | uuid |
| count_taken   | int  |
| count_correct | int  |

*** Users

| Field    | Type            |
|----------+-----------------|
| name     | string          |
| username | string          |
| password | string (hashed) |

*** UserClassRoles

| Field    | Type |
|----------+------|
| user_id  | uuid |
| class_id | uuid |
| role_id  | uuid |

Users have per-class roles

*** Roles

| Field | Type   |
|-------+--------|
| name  | string |

Has many [[Permissions]]

*** Permissions

| Field       | Type     |
|-------------+----------|
| role_id     | uuid     |
| questions   | [string] |
| tags        | [string] |
| answers     | [string] |
| comments    | [string] |
| users       | [string] |
| permissions | [string] |
| roles       | [string] |

I think we'll keep an array of strings with values of:

 - read_any
 - read_class
 - modify_any
 - modify_class
 - create_any
 - create_class
 - delete_any
 - delete_class

The strings are in the form of =/(?<permission>[^_]+)_(?<scope>[^_]+)/=.

*** Class

| Field | Type   |
|-------+--------|
| name  | string |

A class is like "CALC 121" or "CALC 122"; questions belong to a class.
